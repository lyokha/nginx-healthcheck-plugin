name: CI
on:
  push:
    branches: [master]
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      matrix:
        # builds with ghc 9.8.4, 9.10.2, 9.12.1, 9.12.2 fail due to issue
        # https://gitlab.haskell.org/ghc/ghc/-/issues/26136
        ghc: ['8.6', '8.8', '8.10', '9.0', '9.2']
        cabal: ['3.8']
        nginx: [1.22.1]
        nginx-haskell-module: [3.4.3]
        experimental: [false]
        include:
          - ghc: '9.12'
            cabal: head
            nginx: head
            nginx-haskell-module: head
            experimental: true
          - ghc: '9.12'
            cabal: '3.14'
            nginx: 1.28.0
            nginx-haskell-module: head
            experimental: true
          - ghc: '9.10.3'
            cabal: '3.12'
            nginx: 1.26.3
            nginx-haskell-module: head
            experimental: false
          - ghc: '9.8.2'
            cabal: '3.10'
            nginx: 1.26.3
            nginx-haskell-module: head
            experimental: false
          - ghc: '9.6'
            cabal: '3.10'
            nginx: 1.24.0
            nginx-haskell-module: head
            experimental: false
          - ghc: '9.4'
            cabal: '3.8'
            nginx: 1.24.0
            nginx-haskell-module: head
            experimental: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install GHC and Cabal
        uses: haskell-actions/setup@v2
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: ${{ matrix.cabal }}
      - name: Install prove
        uses: perl-actions/install-with-cpanm@v1.7
        with:
          install: "Test::Nginx"
          tests: false
      - name: Install libpcre
        run: |
          sudo apt-get update 
          sudo apt-get install -y libpcre3-dev
      - name: Install and test
        env:
          GHCVER: ${{ matrix.ghc }}
          NGXVER: ${{ matrix.nginx }}
          CABALVER: ${{ matrix.cabal }}
          NGXHMVER: ${{ matrix.nginx-haskell-module }}
        run: |
          cabal --version
          echo "$(ghc --version) "`
              `"[$(ghc --print-project-git-commit-id 2>/dev/null || echo '?')]"
          cabal update

          if [ "$NGXVER" = head ]
          then
              git clone https://github.com/nginx/nginx.git nginx-head
          else
              wget http://nginx.org/download/nginx-${NGXVER}.tar.gz &&
                  tar xzvf nginx-${NGXVER}.tar.gz
          fi

          if [ "$NGXHMVER" = head ]
          then
              git clone https://github.com/lyokha/nginx-haskell-module.git \
                  nginx-haskell-module-head
          else
              wget "https://github.com/lyokha/nginx-haskell-module/"`
                  `"archive/refs/tags/${NGXHMVER}.tar.gz" \
                      -O nginx-haskell-module-${NGXHMVER}.tar.gz &&
                      tar xzvf nginx-haskell-module-${NGXHMVER}.tar.gz
          fi
          git clone https://github.com/openresty/echo-nginx-module.git

          export TEST_NGINX_HCLIB_DIR="$(pwd)/var/lib/nginx"
          install -d "$TEST_NGINX_HCLIB_DIR"

          cd nginx-${NGXVER}/
          if [ "$NGXVER" = head ]
          then
              NGX_CONFIGURE=./auto/configure
          else
              NGX_CONFIGURE=./configure
          fi
          $NGX_CONFIGURE --add-module=../nginx-haskell-module-${NGXHMVER} \
                         --add-module=../echo-nginx-module \
                         --add-dynamic-module=..
          make -j2
          cp objs/ngx_healthcheck_plugin.so \
              "$TEST_NGINX_HCLIB_DIR/libngx_healthcheck_plugin.so"
          export PATH="$(pwd)/objs:$PATH"
          cd -

          echo "$GHCVER" | grep -q '^8\.' &&
              LINKRTS="LINKRTS=-lHSrts_thr-ghc$(ghc --numeric-version)"

          for dir in simple periodic prometheus
          do
              cd $dir
              sed -i 's/^packages: .\+/& ..\/ngx-export-healthcheck.cabal/' \
                  cabal.project
              [ "$GHCVER" = 8.6 ] && \
                         sed -i 's/\(^constraints: ngx-export-healthcheck '`
                               `'+snapstatsserver\).*/\1/' cabal.project
              make PREFIX="$TEST_NGINX_HCLIB_DIR" INPLACE=1 $LINKRTS
              make PREFIX="$TEST_NGINX_HCLIB_DIR" install
              cd -
          done

          cd test
          sudo sh -c 'echo 1 > /proc/sys/net/ipv6/conf/all/disable_ipv6'
          prove -r t
          cd -


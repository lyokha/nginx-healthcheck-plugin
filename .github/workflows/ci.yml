name: CI
on:
  push:
    branches: [master]
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      matrix:
        ghc: [8.8.4, 8.10.7]
        cabal: [3.6.2.0]
        nginx: [1.18.0]
        nginx-haskell-module: [3.1.0]
        experimental: [true]
        include:
          - ghc: 9.6.2
            cabal: 3.10.1.0
            nginx: 1.22.1
            nginx-haskell-module: head
            experimental: true
          - ghc: 9.6.2
            cabal: 3.10.1.0
            nginx: head
            nginx-haskell-module: head
            experimental: true
          - ghc: 9.4.6
            cabal: 3.8.1.0
            nginx: 1.22.0
            nginx-haskell-module: head
            experimental: true
          - ghc: 9.2.8
            cabal: 3.6.2.0
            nginx: 1.22.0
            nginx-haskell-module: head
            experimental: true
          - ghc: 9.0.2
            cabal: 3.4.0.0
            nginx: 1.20.2
            nginx-haskell-module: head
            experimental: true
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install GHC and Cabal
        uses: haskell/actions/setup@v2
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: ${{ matrix.cabal }}
      - name: Install prove
        uses: perl-actions/install-with-cpanm@v1
        with:
          install: "Test::Nginx"
          tests: false
      - name: Install and test
        env:
          GHCVER: ${{ matrix.ghc }}
          NGXVER: ${{ matrix.nginx }}
          CABALVER: ${{ matrix.cabal }}
          NGXHMVER: ${{ matrix.nginx-haskell-module }}
        run: |
          set -e

          cabal --version
          echo "$(ghc --version) "`
              `"[$(ghc --print-project-git-commit-id 2>/dev/null || echo '?')]"
          cabal update

          if [ "$NGXVER" == head ]
          then
              git clone https://github.com/nginx/nginx.git nginx-head
          else
              wget http://nginx.org/download/nginx-${NGXVER}.tar.gz &&
                  tar xzvf nginx-${NGXVER}.tar.gz
          fi

          if [ "$NGXHMVER" == head ]
          then
              git clone https://github.com/lyokha/nginx-haskell-module.git \
                  nginx-haskell-module-head
          else
              wget "https://github.com/lyokha/nginx-haskell-module/"`
                  `"archive/refs/tags/${NGXHMVER}.tar.gz" \
                      -O nginx-haskell-module-${NGXHMVER}.tar.gz &&
                      tar xzvf nginx-haskell-module-${NGXHMVER}.tar.gz
          fi
          git clone https://github.com/openresty/echo-nginx-module.git

          cd nginx-${NGXVER}/
          if [ "$NGXVER" == head ]
          then
              NGX_CONFIGURE=./auto/configure
          else
              NGX_CONFIGURE=./configure
          fi
          $NGX_CONFIGURE --add-module=../nginx-haskell-module-${NGXHMVER} \
                         --add-module=../echo-nginx-module \
                         --add-dynamic-module=..
          make -j2
          cp objs/ngx_healthcheck_plugin.so objs/libngx_healthcheck_plugin.so
          export PATH="$(pwd)/objs:$PATH"
          cd -

          install -d "$(pwd)/ngx-export-distribution/bin"
          cd ngx-export-distribution
          cabal install ngx-export-distribution --installdir="$(pwd)/bin"
          export PATH="$(pwd)/bin:$PATH"
          cd -

          cd simple
          export TEST_NGINX_HCLIB_DIR="$(pwd)"
          sed -i 's/^packages: .\+/& ..\/ngx-export-healthcheck.cabal/' \
              cabal.project
          make PREFIX="$TEST_NGINX_HCLIB_DIR"
          make
          sudo make install
          cd -

          cd periodic
          sed -i 's/^packages: .\+/& ..\/ngx-export-healthcheck.cabal/' \
              cabal.project
          make PREFIX="$TEST_NGINX_HCLIB_DIR"
          make
          sudo make install
          cd -

          cd prometheus
          sed -i 's/^packages: .\+/& ..\/ngx-export-healthcheck.cabal/' \
              cabal.project
          make PREFIX="$TEST_NGINX_HCLIB_DIR"
          make
          sudo make install
          cd -

          cd test
          sudo sh -c 'echo 1 > /proc/sys/net/ipv6/conf/all/disable_ipv6'
          prove -r t
          cd -

          set +e

